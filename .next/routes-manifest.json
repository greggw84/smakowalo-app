{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/api/products/[id]",
      "regex": "^/api/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/products/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/danie/[id]",
      "regex": "^/danie/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/danie/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/cart",
      "regex": "^/cart(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cart(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/dostawa",
      "regex": "^/dostawa(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dostawa(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/jak-to-dziala",
      "regex": "^/jak\\-to\\-dziala(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/jak\\-to\\-dziala(?:/)?$"
    },
    {
      "page": "/kreator",
      "regex": "^/kreator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/kreator(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/menu",
      "regex": "^/menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/menu(?:/)?$"
    },
    {
      "page": "/panel",
      "regex": "^/panel(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/panel(?:/)?$"
    },
    {
      "page": "/payment-success",
      "regex": "^/payment\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment\\-success(?:/)?$"
    },
    {
      "page": "/polityka-prywatnosci",
      "regex": "^/polityka\\-prywatnosci(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/polityka\\-prywatnosci(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/regulamin",
      "regex": "^/regulamin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/regulamin(?:/)?$"
    },
    {
      "page": "/reset-password",
      "regex": "^/reset\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reset\\-password(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}